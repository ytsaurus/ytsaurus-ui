name: "[ci]: Storybook"

on:
  pull_request:

jobs:
    build:
      name: Build
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: "20.x"
            cache: "npm"
        - name: Install AWS CLI
          uses: unfor19/install-aws-cli-action@v1
          with:
            version: 2.22.35
            arch: amd64
        - name: Install Packages
          run: npm ci
        - name: Build artifact
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.UI_S3_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.UI_S3_SECRET_KEY }}
          run: |
            cd packages/ui
            npx msw init ./public --save
            aws s3 cp ./public/mockServiceWorker.js s3://public/mockServiceWorker.js --endpoint-url=https://ytsaurus-ui-test-results.s3-private.mds.yandex.net
            npm run build:storybook
        - name: Create Static Artifact
          uses: actions/upload-artifact@v4
          with:
            name: static
            path: packages/ui/storybook-static

    publish-and-comment-build:
      name: Publish results of storybook build and create comment
      needs:
        - build
      if: ${{ always() }}
      runs-on: ubuntu-latest
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v4
          continue-on-error: true
          with:
            name: static
            path: ./storybook-static
        - name: Install AWS CLI
          uses: unfor19/install-aws-cli-action@v1
          with:
            version: 2.22.35
            arch: amd64
        - name: Upload and Prepare
          id: upload_and_prepare
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.UI_S3_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.UI_S3_SECRET_KEY }}
          shell: bash
          run: |
              aws s3 cp ./storybook-static s3://previews/${{ github.event.pull_request.number }} --endpoint-url=https://ytsaurus-ui-test-results.s3-private.mds.yandex.net --recursive
              message="[Storybook](https://ytsaurus-ui-test-results.s3-website.mds.yandex.net/previews/${{ github.event.pull_request.number }}) is ready.\n"

              echo "message<<EOF" >> $GITHUB_OUTPUT
              echo -e "$message" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
        - name: Create Comment
          uses: marocchino/sticky-pull-request-comment@v2
          with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            header: Storybook
            message: ${{ steps.upload_and_prepare.outputs.message }}

    tests:
      name: Playwright components tests
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version: "20.x"
            cache: "npm"
        - name: Install Packages
          run: npm ci
        - name: Run tests
          run: |
            cd packages/ui
            npm run test:components
        - name: Create Static Artifact
          uses: actions/upload-artifact@v4
          if: always()
          with:
            name: report
            path: packages/ui/src/ui/playwright-components/report
    
    publish-and-comment-tests-report:
      name: Publish report of pw-components tests and create comment
      needs:
        - tests
      if: ${{ always() }}
      runs-on: ubuntu-latest
      steps:
        - name: Download Artifacts
          uses: actions/download-artifact@v4
          continue-on-error: true
          with:
            name: report
            path: ./report
        - name: Install AWS CLI
          uses: unfor19/install-aws-cli-action@v1
          with:
            version: 2.22.35
            arch: amd64
        - name: Upload and Prepare
          id: upload_and_prepare
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.UI_S3_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.UI_S3_SECRET_KEY }}
          shell: bash
          run: |
              aws s3 cp ./report s3://pw-components-reports/${{ github.event.pull_request.number }} --endpoint-url=https://ytsaurus-ui-test-results.s3-private.mds.yandex.net --recursive
              message="[Playwright components report](https://ytsaurus-ui-test-results.s3-website.mds.yandex.net/pw-components-reports/${{ github.event.pull_request.number }}) is ready.\n"

              echo "message<<EOF" >> $GITHUB_OUTPUT
              echo -e "$message" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
        - name: Create Comment
          uses: marocchino/sticky-pull-request-comment@v2
          with:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            header: Playwright components
            message: ${{ steps.upload_and_prepare.outputs.message }}
          
